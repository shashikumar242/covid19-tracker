{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","App.module.css","components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","handlecountryChange","fetchedfetchCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa5a3641.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1OSN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2LtLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bpZM\",\"card\":\"Cards_card__BUJ-l\",\"infected\":\"Cards_infected__2o6i6\",\"recovered\":\"Cards_recovered__38bBI\",\"deaths\":\"Cards_deaths__1HgRm\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading\";\r\n  }\r\n  console.log(\"cardss\", confirmed);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography colr=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of covid19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              recovery\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography colr=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovery cases of covid19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography colr=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of death cases of covid19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"http://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    // const modified={\r\n    //     confirmed=confirmed,\r\n    //     recovered=recovered,\r\n    //     deaths=deaths,\r\n    //     lastUpdate=lastUpdate\r\n    // }\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      data: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    //console.log(\"shi\",countries)\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    console.log(dailyData);\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ data }) => data),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgb(255,0,0,0.5\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl, StylesProvider } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\nconst CountryPicker = ({ handlecountryChange }) => {\r\n  const [fetchedfetchCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  // console.log(\"fetchedc\",fetchedfetchCountries)\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handlecountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedfetchCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}{\" \"}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n  handlecountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards data={data} />\r\n        <CountryPicker handlecountryChange={this.handlecountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3MpuM\"};"],"sourceRoot":""}